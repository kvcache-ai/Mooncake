name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip

      - name: Extract version from tag
        run: |
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Install system dependencies and build project
        run: |
          sudo apt update -y
          sudo bash -x dependencies.sh -y
          git submodule update --init
          mkdir build
          cd build
          cmake .. -DUSE_HTTP=ON
          sudo make install -j
        shell: bash

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build Python 3.10 wheel
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          # Build the wheel package for Python 3.10
          PYTHON_VERSION=3.10 OUTPUT_DIR=dist-py3.10 ./scripts/build_wheel.sh
        env:
          VERSION: ${{ env.VERSION }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build Python 3.12 wheel
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          # Build the wheel package for Python 3.12
          PYTHON_VERSION=3.12 OUTPUT_DIR=dist-py3.12 ./scripts/build_wheel.sh
        env:
          VERSION: ${{ env.VERSION }}

      - name: Verify and collect all wheels
        run: |
          # Verify Python 3.10 wheel exists
          if [ ! -f mooncake-wheel/dist-py3.10/*.whl ]; then
            echo "ERROR: No Python 3.10 wheel file found!"
            exit 1
          fi
          
          # Verify Python 3.12 wheel exists
          if [ ! -f mooncake-wheel/dist-py3.12/*.whl ]; then
            echo "ERROR: No Python 3.12 wheel file found!"
            exit 1
          fi
          
          # Collect all wheels
          mkdir -p mooncake-wheel/dist-all
          cp mooncake-wheel/dist-py3.10/*.whl mooncake-wheel/dist-all/
          cp mooncake-wheel/dist-py3.12/*.whl mooncake-wheel/dist-all/
          
          # List all collected wheels
          echo "Collected wheels:"
          ls -la mooncake-wheel/dist-all/

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: mooncake-wheel/dist-all/*.whl

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: mooncake-wheel/dist-all/
          password: ${{ secrets.PYPI_API_TOKEN }}
